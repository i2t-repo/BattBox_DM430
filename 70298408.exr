$BEGIN$$

$COMMENT$
//FILE: ../src/70298408.exr
//IDL Type: DM430E_1_1_X_X_Applayer
//IDL Name: DM430E_1_1_X_X_Applayer_interface
//IDL Version: 006A
//IDL CheckSum: 4A5EEF
//This file is automatically generated by RatatoskT3,
//so change it only if you know what you are doing...
$


$COMMENT$//Custom GUIDE array signals:$
$ADR4$
ID.Net[].Addr S_IDTYPE_STRUCT_t IN SYS
$
$COMMENT$//Custom GUIDE array signals:$
$DIM2$
ID.Net[2].Addr
$

$COMMENT$//Custom GUIDE array signals:$
$ADR4$
ID.Net[].Addr S_IDTYPE_STRUCT_t IN SYS
$
$COMMENT$//Custom GUIDE array signals:$
$DIM2$
ID.Net[2].Addr
$

$COMMENT$//Custom GUIDE array signals:$
$ADR4$
UART[].TxMsg.Data ARRAY[241]U8 IN SYS
UART[].RxMsg.Data ARRAY[128]U8 OUT SYS
$
$COMMENT$//Custom GUIDE array signals:$
$DIM2$
UART[1].TxMsg.Data
UART[1].RxMsg.Data
$

$SET$STATUS=0$

$TYPES$  PORT$
$SET$NVMEMORYSIZE=4000$
$SET$DYNAMICNV=1$

$TYPES$ BOOL CBOOL BIT CBIT UB CUB U8 CU8 SB CSB S8 CS8 UW CUW U16 CU16 SW CSW S16 CS16 UL CUL U32 CU32 SL CSL S32 CS32 _CON CNULL T CT _LOG TL TLW CTL PORT CPORT LANG CLANG CCOLOR COLOR CFILE CFONT FONT PXO XCLASS$
$MAXSYSLEVEL$10$
$DYNAMICFONTTYPE$$
$MAXPARAMETERFILESIZE$16384$
$SET$ADDRESSMODE=LSBFIRST$
$SET$ADDRESS_SIZE=16$
$SET$MIN_DATASIZE=8$


$CONSUMES$
$

$PRODUCES$
void;InitExtFunc(void);genericCSARM4742013q2;EXTERN
void;ProcessExtFunc(void);genericCSARM4742013q2;EXTERN
void;InitBootFunc(void);dualbootSTM32F7XX541_;EXTERN
void;ProcessBootFunc(void);dualbootSTM32F7XX541_;EXTERN
$

$COMMENT$//Simple, scalar signals:$
$ADR3$
ECUInfoPacked.BootVer0 U16 OUT SYS
$

$COMMENT$//Simple array signals:$
$ADR4$
$

$COMMENT$//GUIDE array signals:$
$ADR4$
ECUInfoPacked.AppCmplTime ARRAY[4]U16 OUT SYS
ECUInfoPacked.SerNr0 ARRAY[3]U16 OUT SYS
ECUInfoPacked.BDate ARRAY[4]U16 OUT SYS
ECUInfoPacked.PNr0 ARRAY[6]U16 OUT SYS
ECUInfoPacked.PRev0 ARRAY[2]U16 OUT SYS
ECUInfoPacked.PNr1 ARRAY[6]U16 OUT SYS
ECUInfoPacked.PRev1 ARRAY[2]U16 OUT SYS
ECUInfoPacked.PNr2 ARRAY[3]U16 OUT SYS
ECUInfoPacked.AppId ARRAY[26]U16 OUT SYS
ECUInfoPacked.AppType ARRAY[16]U16 OUT SYS
ECUInfoPacked.AppVer ARRAY[11]U16 OUT SYS
$

$COMMENT$//Signals inside structs:$
$ADR5$
ServiceTool.MasterPassword.Write S_DIAGNOSTIC_CONTROL_t OUT SYS
ServiceTool.MasterPassword.Read S_DIAGNOSTIC_CONTROL_t IN SYS
ServiceTool.DisableRead S_DIAGNOSTIC_CONTROL_t IN SYS
ServiceTool.DisableWrite S_DIAGNOSTIC_CONTROL_t IN SYS
ServiceTool.DisableDownload S_DIAGNOSTIC_CONTROL_t IN SYS
ServiceTool.Connect S_DIAGNOSTIC_CONTROL_t OUT SYS
NVMem.Status S_NV_STRUCT_t OUT SYS
NVMem.Intern S_NV_STRUCT_t OUT SYS
NVMem.PendingCount S_NV_STRUCT_t OUT SYS
ID.Node.ServerAddr S_IDTYPE_STRUCT_t IN SYSI
ID.Node.ClientAddr S_IDTYPE_STRUCT_t OUT SYS
OS.ETime S_OSTYPE_STRUCT_t OUT SYS
OS.LoopCnt S_OSTYPE_STRUCT_t OUT SYS
OS.ExecTime S_OSTYPE_STRUCT_t OUT SYS
OS.ExecTimeOut S_OSTYPE_STRUCT_t IN SYSI
OS.ExecTimeWork S_OSTYPE_STRUCT_t OUT SYS
OS.ExecTimeGraph S_OSTYPE_STRUCT_t OUT SYS
OS.CrcStatus S_OSTYPE_STRUCT_t OUT SYS
OS.CrcFailed S_OSTYPE_STRUCT_t OUT SYS
OS.CrcCalcTime S_OSTYPE_STRUCT_t OUT SYS
OS.ChecksumFailure S_OSTYPE_STRUCT_t OUT SYS
OS.ChecksumFailureTreatment S_OSTYPE_STRUCT_t IN SYSI
OS.ResetExecTime S_OSTYPE_STRUCT_t IN SYS
OS.Start S_OSTYPE_STRUCT_t OUT SYS
OS.RAMTestTimeInterval S_OSTYPE_STRUCT_t OUT SYS
UnitVersion.Ident_No S_UNITVERSION_STRUCT_t IN SYS
UnitVersion.SW_Vers S_UNITVERSION_STRUCT_t IN SYS
UnitVersion.Param_Vers S_UNITVERSION_STRUCT_t IN SYS
UnitVersion.Release S_UNITVERSION_STRUCT_t IN SYS
RTC.Status S_RTC_INTERFACE_STRUCT_t OUT SYSI
RTC.Year S_RTC_INTERFACE_STRUCT_t BI SYS
RTC.Second S_RTC_INTERFACE_STRUCT_t BI SYS
RTC.Minute S_RTC_INTERFACE_STRUCT_t BI SYS
RTC.Hour S_RTC_INTERFACE_STRUCT_t BI SYS
RTC.Day S_RTC_INTERFACE_STRUCT_t BI SYS
RTC.DayOfWeek S_RTC_INTERFACE_STRUCT_t OUT SYS
RTC.Month S_RTC_INTERFACE_STRUCT_t BI SYS
RTC.Set S_RTC_INTERFACE_STRUCT_t IN SYS
RTC.Stop S_RTC_INTERFACE_STRUCT_t IN SYS
Display.Backlight S_LCD1_INTERFACE_STRUCT_t IN SYSI
Display.Status S_LCD1_INTERFACE_STRUCT_t OUT SYS
Display.Port S_LCD1_INTERFACE_STRUCT_t OUT SYSI
Color.Transparent COLORSTYPE OUT SYS
Ambient.AnIn S_LIGHT1_INTERFACE_STRUCT_t OUT SYS
AppLog.EraseOnDownload S_APPLOG_INTERFACE_STRUCT_t IN SYSI
Button.Type S_BUTTON_INTERFACE_STRUCT_t OUT SYS
Button.Backlight S_BUTTON_INTERFACE_STRUCT_t IN SYSI
Button.One S_BUTTON_INTERFACE_STRUCT_t OUT SYS
Button.Two S_BUTTON_INTERFACE_STRUCT_t OUT SYS
Button.Three S_BUTTON_INTERFACE_STRUCT_t OUT SYS
Button.Four S_BUTTON_INTERFACE_STRUCT_t OUT SYS
Button.Up S_BUTTON_INTERFACE_STRUCT_t OUT SYS
Button.Left S_BUTTON_INTERFACE_STRUCT_t OUT SYS
Button.Center S_BUTTON_INTERFACE_STRUCT_t OUT SYS
Button.Down S_BUTTON_INTERFACE_STRUCT_t OUT SYS
Button.Right S_BUTTON_INTERFACE_STRUCT_t OUT SYS
Button.Home S_BUTTON_INTERFACE_STRUCT_t OUT SYS
Button.Esc S_BUTTON_INTERFACE_STRUCT_t OUT SYS
Led.GreenRight S_DISPLAY_LED_INTERFACE_STRUCT_t IN SYSI
Led.RedRight S_DISPLAY_LED_INTERFACE_STRUCT_t IN SYSI
Led.AmberRight S_DISPLAY_LED_INTERFACE_STRUCT_t IN SYSI
Led.GreenLeft S_DISPLAY_LED_INTERFACE_STRUCT_t IN SYSI
Led.RedLeft S_DISPLAY_LED_INTERFACE_STRUCT_t IN SYSI
Led.AmberLeft S_DISPLAY_LED_INTERFACE_STRUCT_t IN SYSI
C1p06.AnIn S_DA1_INTERFACE_STRUCT_t OUT SYS
C1p06.Voltage S_DA1_INTERFACE_STRUCT_t OUT SYS
C1p06.Bias S_DA1_INTERFACE_STRUCT_t IN SYSI
C1p06.Range S_DA1_INTERFACE_STRUCT_t IN SYSI
C1p06.DigThresLow S_DA1_INTERFACE_STRUCT_t IN SYSI
C1p06.DigThresHigh S_DA1_INTERFACE_STRUCT_t IN SYSI
C1p06.Status S_DA1_INTERFACE_STRUCT_t OUT SYSI
C1p06.DigIn S_DA1_INTERFACE_STRUCT_t OUT SYSI
C1p07.AnIn S_DA1_INTERFACE_STRUCT_t OUT SYS
C1p07.Voltage S_DA1_INTERFACE_STRUCT_t OUT SYS
C1p07.Bias S_DA1_INTERFACE_STRUCT_t IN SYSI
C1p07.Range S_DA1_INTERFACE_STRUCT_t IN SYSI
C1p07.DigThresLow S_DA1_INTERFACE_STRUCT_t IN SYSI
C1p07.DigThresHigh S_DA1_INTERFACE_STRUCT_t IN SYSI
C1p07.Status S_DA1_INTERFACE_STRUCT_t OUT SYSI
C1p07.DigIn S_DA1_INTERFACE_STRUCT_t OUT SYSI
C1p05.AnIn S_DA3_INTERFACE_STRUCT_t OUT SYS
C1p05.Voltage S_DA3_INTERFACE_STRUCT_t OUT SYS
C1p05.DigThresLow S_DA3_INTERFACE_STRUCT_t IN SYSI
C1p05.DigThresHigh S_DA3_INTERFACE_STRUCT_t IN SYSI
C1p05.DigIn S_DA3_INTERFACE_STRUCT_t OUT SYSI
C1p10.Phase S_DAFRC3_INTERFACE_STRUCT_t OUT SYS
C1p10.Per S_DAFRC3_INTERFACE_STRUCT_t OUT SYS
C1p10.Freq S_DAFRC3_INTERFACE_STRUCT_t OUT SYS
C1p10.Count S_DAFRC3_INTERFACE_STRUCT_t OUT SYS
C1p10.Duty S_DAFRC3_INTERFACE_STRUCT_t OUT SYS
C1p10.QuadCount S_DAFRC3_INTERFACE_STRUCT_t OUT SYS
C1p10.Current S_DAFRC3_INTERFACE_STRUCT_t OUT SYS
C1p10.AnIn S_DAFRC3_INTERFACE_STRUCT_t OUT SYS
C1p10.Voltage S_DAFRC3_INTERFACE_STRUCT_t OUT SYS
C1p10.Resistance S_DAFRC3_INTERFACE_STRUCT_t OUT SYS
C1p10.Bias S_DAFRC3_INTERFACE_STRUCT_t IN SYSI
C1p10.Range S_DAFRC3_INTERFACE_STRUCT_t IN SYSI
C1p10.InputMode S_DAFRC3_INTERFACE_STRUCT_t IN SYSI
C1p10.DigThresLow S_DAFRC3_INTERFACE_STRUCT_t IN SYSI
C1p10.DigThresHigh S_DAFRC3_INTERFACE_STRUCT_t IN SYSI
C1p10.Status S_DAFRC3_INTERFACE_STRUCT_t OUT SYS
C1p10.DigIn S_DAFRC3_INTERFACE_STRUCT_t OUT SYS
C1p11.Phase S_DAFRC3_INTERFACE_STRUCT_t OUT SYS
C1p11.Per S_DAFRC3_INTERFACE_STRUCT_t OUT SYS
C1p11.Freq S_DAFRC3_INTERFACE_STRUCT_t OUT SYS
C1p11.Count S_DAFRC3_INTERFACE_STRUCT_t OUT SYS
C1p11.Duty S_DAFRC3_INTERFACE_STRUCT_t OUT SYS
C1p11.QuadCount S_DAFRC3_INTERFACE_STRUCT_t OUT SYS
C1p11.Current S_DAFRC3_INTERFACE_STRUCT_t OUT SYS
C1p11.AnIn S_DAFRC3_INTERFACE_STRUCT_t OUT SYS
C1p11.Voltage S_DAFRC3_INTERFACE_STRUCT_t OUT SYS
C1p11.Resistance S_DAFRC3_INTERFACE_STRUCT_t OUT SYS
C1p11.Bias S_DAFRC3_INTERFACE_STRUCT_t IN SYSI
C1p11.Range S_DAFRC3_INTERFACE_STRUCT_t IN SYSI
C1p11.InputMode S_DAFRC3_INTERFACE_STRUCT_t IN SYSI
C1p11.DigThresLow S_DAFRC3_INTERFACE_STRUCT_t IN SYSI
C1p11.DigThresHigh S_DAFRC3_INTERFACE_STRUCT_t IN SYSI
C1p11.Status S_DAFRC3_INTERFACE_STRUCT_t OUT SYS
C1p11.DigIn S_DAFRC3_INTERFACE_STRUCT_t OUT SYS
CAN[].Baudrate S_CAN_INTERFACE_STRUCT_t IN SYS
CAN[].BusOff S_CAN_INTERFACE_STRUCT_t OUT SYS
CAN[].Reset S_CAN_INTERFACE_STRUCT_t IN SYS
CAN[].DriverError S_CAN_INTERFACE_STRUCT_t OUT SYS
CAN[].DriverReset S_CAN_INTERFACE_STRUCT_t IN SYS
CAN[].Overflow S_CAN_INTERFACE_STRUCT_t OUT SYS
CAN[].ErrorPassive S_CAN_INTERFACE_STRUCT_t OUT SYS
CAN[].Port S_CAN_INTERFACE_STRUCT_t OUT SYS
C1p02.AnIn S_VLDP_INTERFACE_STRUCT_t OUT SYS
C1p02.Voltage S_VLDP_INTERFACE_STRUCT_t OUT SYS
C1p12.DigFeedBack S_DOUT14_INTERFACE_STRUCT_t OUT SYSI
C1p12.DigOut S_DOUT14_INTERFACE_STRUCT_t IN SYSI
UART[].Baudrate S_UART4_INTERFACE_STRUCT_t IN SYSI
UART[].TwoStopBits S_UART4_INTERFACE_STRUCT_t IN SYSI
UART[].TxMsg.Len S_UART4_INTERFACE_STRUCT_t IN SYS
UART[].TxMsg.Tx S_UART4_INTERFACE_STRUCT_t BI SYS
UART[].TxMsg.Rdy S_UART4_INTERFACE_STRUCT_t OUT SYS
UART[].RxMsg.Len S_UART4_INTERFACE_STRUCT_t OUT SYS
UART[].RxMsg.Rx S_UART4_INTERFACE_STRUCT_t OUT SYS
UART[].RxMsg.Clear S_UART4_INTERFACE_STRUCT_t IN SYS
UART[].RxMsg.Overflow S_UART4_INTERFACE_STRUCT_t OUT SYS
$

$COMMENT$//Signals inside structs that are both SYS and SYSI:$
$ADR5$
OS.ExecTimeOut S_OSTYPE_STRUCT_t IN SYS
OS.ChecksumFailureTreatment S_OSTYPE_STRUCT_t IN SYS
RTC.Status S_RTC_INTERFACE_STRUCT_t OUT SYS
Display.Backlight S_LCD1_INTERFACE_STRUCT_t IN SYS
Display.Port S_LCD1_INTERFACE_STRUCT_t OUT SYS
Button.Backlight S_BUTTON_INTERFACE_STRUCT_t IN SYS
Led.GreenRight S_DISPLAY_LED_INTERFACE_STRUCT_t IN SYS
Led.RedRight S_DISPLAY_LED_INTERFACE_STRUCT_t IN SYS
Led.AmberRight S_DISPLAY_LED_INTERFACE_STRUCT_t IN SYS
Led.GreenLeft S_DISPLAY_LED_INTERFACE_STRUCT_t IN SYS
Led.RedLeft S_DISPLAY_LED_INTERFACE_STRUCT_t IN SYS
Led.AmberLeft S_DISPLAY_LED_INTERFACE_STRUCT_t IN SYS
C1p06.Bias S_DA1_INTERFACE_STRUCT_t IN SYS
C1p06.Range S_DA1_INTERFACE_STRUCT_t IN SYS
C1p06.DigThresLow S_DA1_INTERFACE_STRUCT_t IN SYS
C1p06.DigThresHigh S_DA1_INTERFACE_STRUCT_t IN SYS
C1p06.Status S_DA1_INTERFACE_STRUCT_t OUT SYS
C1p06.DigIn S_DA1_INTERFACE_STRUCT_t OUT SYS
C1p07.Bias S_DA1_INTERFACE_STRUCT_t IN SYS
C1p07.Range S_DA1_INTERFACE_STRUCT_t IN SYS
C1p07.DigThresLow S_DA1_INTERFACE_STRUCT_t IN SYS
C1p07.DigThresHigh S_DA1_INTERFACE_STRUCT_t IN SYS
C1p07.Status S_DA1_INTERFACE_STRUCT_t OUT SYS
C1p07.DigIn S_DA1_INTERFACE_STRUCT_t OUT SYS
C1p05.DigThresLow S_DA3_INTERFACE_STRUCT_t IN SYS
C1p05.DigThresHigh S_DA3_INTERFACE_STRUCT_t IN SYS
C1p05.DigIn S_DA3_INTERFACE_STRUCT_t OUT SYS
C1p10.Bias S_DAFRC3_INTERFACE_STRUCT_t IN SYS
C1p10.Range S_DAFRC3_INTERFACE_STRUCT_t IN SYS
C1p10.InputMode S_DAFRC3_INTERFACE_STRUCT_t IN SYS
C1p10.DigThresLow S_DAFRC3_INTERFACE_STRUCT_t IN SYS
C1p10.DigThresHigh S_DAFRC3_INTERFACE_STRUCT_t IN SYS
C1p11.Bias S_DAFRC3_INTERFACE_STRUCT_t IN SYS
C1p11.Range S_DAFRC3_INTERFACE_STRUCT_t IN SYS
C1p11.InputMode S_DAFRC3_INTERFACE_STRUCT_t IN SYS
C1p11.DigThresLow S_DAFRC3_INTERFACE_STRUCT_t IN SYS
C1p11.DigThresHigh S_DAFRC3_INTERFACE_STRUCT_t IN SYS
C1p12.DigFeedBack S_DOUT14_INTERFACE_STRUCT_t OUT SYS
C1p12.DigOut S_DOUT14_INTERFACE_STRUCT_t IN SYS
UART[].Baudrate S_UART4_INTERFACE_STRUCT_t IN SYS
UART[].TwoStopBits S_UART4_INTERFACE_STRUCT_t IN SYS
$

$COMMENT$//Dimensions of simple array signals:$
$DIM1$
$

$COMMENT$//Dimensions of complex array signals:$
$DIM2$
CAN[2].Baudrate
CAN[2].BusOff
CAN[2].Reset
CAN[2].DriverError
CAN[2].DriverReset
CAN[2].Overflow
CAN[2].ErrorPassive
CAN[2].Port
UART[1].Baudrate
UART[1].TwoStopBits
UART[1].TxMsg.Len
UART[1].TxMsg.Tx
UART[1].TxMsg.Rdy
UART[1].RxMsg.Len
UART[1].RxMsg.Rx
UART[1].RxMsg.Clear
UART[1].RxMsg.Overflow
$

$TYPEDEFC$
typedef struct {
       /**  PC_Set_MasterPassword PC_INSTANCE_NAME_ServiceTool. PC_NO_INSTANCE*/
    U32 Write;
       /**  PC_Get_MasterPassword PC_INSTANCE_NAME_ServiceTool. PC_NO_INSTANCE*/
    U32 Read;
} S_MASTERPASSWORD_t;

typedef struct {
    S_MASTERPASSWORD_t MasterPassword;
       /**  PC_DiagCon_Set_DisableRead PC_NO_INSTANCE*/
    BOOL DisableRead;
       /**  PC_DiagCon_Set_DisableWrite PC_NO_INSTANCE*/
    BOOL DisableWrite;
       /**  PC_DiagCon_Set_DisableDownload PC_NO_INSTANCE*/
    BOOL DisableDownload;
       /**  PC_DiagCon_Get_Connect PC_NO_INSTANCE*/
    BOOL Connect;
} S_DIAGNOSTIC_CONTROL_t;

   /**  On the C Open interface this should be tested in demo_PC.h */
typedef struct {
    U16 Status;
    U16 Intern;
    U16 PendingCount;
} S_NV_STRUCT_t;

typedef struct {
       /**  PC_CAN_SET_ServerAddr PC_INSTANCE_NAME_ID. PC_NO_INSTANCE  */
    U8 ServerAddr;
       /**  PC_CAN_GET_ClientAddr PC_INSTANCE_NAME_ID. PC_NO_INSTANCE */
    U8 ClientAddr;
} S_NODETYPE_STRUCT_t;

typedef struct {
    U8 Addr;
} S_NETTYPE_STRUCT_t;

typedef struct {
    S_NODETYPE_STRUCT_t Node;
    S_NETTYPE_STRUCT_t Net[3];
} S_IDTYPE_STRUCT_t;

typedef struct {
       /**  PC_OS_GET_ETime PC_NO_INSTANCE*/
    U32 ETime;  /** Time since power on [10ms] (visible in the API, read) */
       /**  PC_OS_GET_LoopCnt PC_NO_INSTANCE*/
    U32 LoopCnt;  /** Already processed loops after the last power cycle (visible in the API, read)   */
       /**  PC_OS_GET_ExecTime PC_NO_INSTANCE*/
    U16 ExecTime;  /** Real Processing time [ms] (visible in the API, read)     */
    U16 ExecTimeSave;  /** temp buffer for the actual used loop-time    */
       /**  PC_OS_SET_ExecTimeOut PC_NO_INSTANCE PC_PRIMARY */
    U16 ExecTimeOut;  /** Requested processing time [ms] (visible in the API, write in primary, read in secondary)  */
       /**  PC_OS_GET_ExecTimeWork PC_NO_INSTANCE */
    U16 ExecTimeWork;  /** Actual work time during processing time [ms] (visible in the API, read)*/
    U16 ExecTimeGraph;
       /**  PC_OS_GET_CrcStatus PC_NO_INSTANCE */
    U16 CrcStatus;  /** CRC calculation has failed    */
    U16 CrcDownloaded;  /** CRC has been downloaded */
    U16 CrcCalculated;  /** CRC has been calculated  */
       /**  PC_OS_GET_CrcCalcTime PC_NO_INSTANCE*/
    U16 CrcCalcTime;  /** CRC background calculation time */
       /**  PC_OS_GET_ChecksumFailure PC_NO_INSTANCE*/
    U16 ChecksumFailure;  /** BIT0 = ProgramCode; BIT1 = RAM ; BIT2 = Bootloader*/
      /** BIT0 = ProgramCode; BIT1 = RAM ; BIT2 = Bootloader ; if zero system will stop ASAP */
      /** if one of the above is BITS set to 1 = application stops */
       /**  PC_OS_SET_ChecksumFailureTreatment PC_NO_INSTANCE */
    U16 ChecksumFailureTreatment;
      /** if 1 = ExecTime will be set to ExecTimeWork again   */
       /**  PC_OS_SET_ResetExecTime PC_NO_INSTANCE */
    BOOL ResetExecTime;
    BOOL ResetExecTimeOld;  /** temp buffer for the request to reset the timing */
       /**  PC_OS_GET_Start PC_NO_INSTANCE */
    BOOL Start;  /** Set during the first processing time after a power cycle (visible in the API, read) */
    BOOL ResetExecTimeSafetyLayer;  /** temp buffer for the request to reset the timing */
       /**  PC_OS_GET_RAMTestTimeInterval PC_NO_INSTANCE*/
    U16 RAMTestTimeInterval;  /** Time interval of RAM diagnostic self-check [s] (visible in the API, read) */
} S_OSTYPE_STRUCT_t;

typedef struct {
    U32 Ident_No;
    U32 SW_Vers;
    U32 Param_Vers;
    BOOL Release;
} S_UNITVERSION_STRUCT_t;

typedef struct {
    U16 Status;
    U16 Year;
    U8 Second;
    U8 Minute;
    U8 Hour;
    U8 Day;
    U8 DayOfWeek;
    U8 Month;
    BOOL Set;
    BOOL SetOld;
    BOOL Stop;
} S_RTC_INTERFACE_STRUCT_t;

typedef struct {
    U8 Backlight;
    BOOL STBY_Mode;
    U16 Status;
    PORT Port;
    U16 Freq;
    U16 FreqOld;
} S_LCD1_INTERFACE_STRUCT_t;

typedef struct {
    COLOR Transparent;
} COLORSTYPE;

typedef struct {
    U16 AnIn;
} S_LIGHT1_INTERFACE_STRUCT_t;

typedef struct {
    BOOL EraseOnDownload;
} S_APPLOG_INTERFACE_STRUCT_t;

typedef struct {
    U16 Type;
    BOOL Backlight;
    BOOL One;
    BOOL Two;
    BOOL Three;
    BOOL Four;
    BOOL Up;
    BOOL Left;
    BOOL Center;
    BOOL Down;
    BOOL Right;
    BOOL Home;
    BOOL Esc;
} S_BUTTON_INTERFACE_STRUCT_t;

typedef struct {
    BOOL GreenRight;
    BOOL RedRight;
    BOOL AmberRight;
    BOOL GreenLeft;
    BOOL RedLeft;
    BOOL AmberLeft;
} S_DISPLAY_LED_INTERFACE_STRUCT_t;

typedef struct {
       /**  PC_DA1_Set_Input_Config */
       /**  PC_DA1_Get_Analog_RawCounts */
    U16 AnIn;
       /**  PC_DA1_Get_Analog_mVolts */
    U16 Voltage;
       /**  0 -> NO Pulldown, NO Pullup */
       /**  1 -> NO Pulldown,    Pullup */
       /**  2 ->    Pulldown, NO Pullup */
       /**  3 ->    Pulldown,    Pullup */
       /**  PC_CONFIG_PARAMETER */
    U8 Bias;
       /**  0 ->  AD 5    V range */
       /**  1 ->  AD sup  V range */
       /**  PC_CONFIG_PARAMETER */
    U8 Range;
       /**  PC_CONFIG_PARAMETER */
    U16 DigThresLow;
       /**  PC_CONFIG_PARAMETER */
    U16 DigThresHigh;
       /**  PC_DA1_Get_Status */
    U16 Status;
       /**  PC_DA1_Get_Digital */
    BOOL DigIn;
} S_DA1_INTERFACE_STRUCT_t;

typedef struct {
       /**  PC_DA3_Set_Input_Config*/
       /**  PC_DA3_Get_Analog_RawCounts */
    U16 AnIn;
       /**  PC_DA3_Get_Analog_mVolts */
    U16 Voltage;
       /**  PC_CONFIG_PARAMETER */
    U16 DigThresLow;
       /**  PC_CONFIG_PARAMETER */
    U16 DigThresHigh;
       /**  PC_DA3_Get_Digital */
    BOOL DigIn;
} S_DA3_INTERFACE_STRUCT_t;

typedef struct {
    S32 Phase;
    U32 Per;
    U16 Freq;
    U16 Count;
    U16 Duty;
    S16 QuadCount;
       /**  PC_DARC1_Set_Input_Config */
       /**  PC_DARC1_Get_Analog_Current */
    U32 Current;
       /**  PC_DARC1_Get_Analog_RawCounts */
    U16 AnIn;
       /**  PC_DARC1_Get_Analog_mVolts */
    U16 Voltage;
       /**  PC_DARC1_Get_Analog_Resistance */
    U16 Resistance;
       /**  0 -> NO Pulldown, NO Pullup */
       /**  1 -> NO Pulldown,    Pullup */
       /**  2 ->    Pulldown, NO Pullup */
       /**  3 ->    Pulldown,    Pullup */
       /**  PC_CONFIG_PARAMETER */
    U8 Bias;
       /**  0 ->  AD 5    V range */
       /**  1 ->  AD sup  V range */
       /**  PC_CONFIG_PARAMETER */
    U8 Range;
       /**  0 ->  normal AD input */
       /**  1 ->  temperature/rheostat */
       /**  2 ->  current */
       /**  PC_CONFIG_PARAMETER */
    U16 InputMode;
       /**  PC_CONFIG_PARAMETER */
    U16 DigThresLow;
       /**  PC_CONFIG_PARAMETER */
    U16 DigThresHigh;
    U16 uiCurrentInResetCounter;
    U16 uiStartCounter;
       /**  PC_DARC1_Get_Status */
    U16 Status;
       /**  PC_DARC1_Get_Digital */
    BOOL DigIn;
} S_DAFRC3_INTERFACE_STRUCT_t;

typedef struct {
    U32 Id;
    U32 Mask;
    U8 Data[8];
    U8 Length;
    BOOL Tx;
    BOOL Rx;
    BOOL Overrun;
    BOOL TransmitMode;
    BOOL ReceiveMode;
    BOOL ExtendedMode;
    BOOL OverwriteProtect;
} CAN_INTERFACE_MSG_STRUCT;

typedef struct {
    U32 Baudrate;
    BOOL BusOff;
    BOOL Reset;
    BOOL DriverError;
    BOOL DriverReset;
    BOOL Overflow;
    BOOL ErrorPassive;
    PORT Port;
} S_CAN_INTERFACE_STRUCT_t;

typedef struct {
       /**  PC_VLDP1_Get_Raw_Analog */
    U16 AnIn;
       /**  PC_VLDP1_Get_Analog_mVolts */
    U16 Voltage;
} S_VLDP_INTERFACE_STRUCT_t;

typedef struct {
       /**  PC_DOUT14_Get_Output_FeedBack */
    BOOL DigFeedBack;
       /**  PC_DOUT14_Set_Output */
    BOOL DigOut;
} S_DOUT14_INTERFACE_STRUCT_t;

typedef struct {
    U16 Len;
    BOOL Tx;
    BOOL Rdy;
    U8 Data[241];
} S_UART_TX_STRUCT_t;

typedef struct {
    U16 Len;
    BOOL Rx;
    BOOL Clear;
    BOOL Overflow;
    U8 Data[128];
} S_UART_RX_STRUCT_t;

typedef struct {
    U32 BaudrateOld;
    U32 Baudrate;
    BOOL TwoStopBitsOld;
    BOOL TwoStopBits;
    S_UART_TX_STRUCT_t TxMsg;
    S_UART_RX_STRUCT_t RxMsg;
} S_UART4_INTERFACE_STRUCT_t;

$




$COMMENT$//Hand written EXR content follows: $

$OSDEP$
U__HWNR2
IC_TIME-US
U__UNTIL
U__REPEAT
O__OBJ-CR-CALL1
O__OBJ-END1
IC_OBJECT-IN1
IC_OBJECT-IN-B1
IC_OBJECT-OUT1
IC_OBJECT-OUT-B1
O__CLASS-DEFINE1
O__CLASS-END1
IC_INIT-OUT
MA_ISIN
MA_ICOS
MA_ITAN
MA_ISQRT
MA_IASIN
MA_IACOS
MA_IATAN
TIMER
T1M
T10M
T100M
T1S
T60S
T1H
TLOOP
IC_BIOS-BI-U1
IC_BIOS-IN-U1
IC_BIOS-SHOW-U1
IC_MODULE-IN-U1
IC_MOD-BUS-IN1
IC_MOD-BUS-OUT
IC_PARAM-NS-U
IC_PARAM-IN-U1
IC_ACC-APP
IC_SET-PULSE
IC_ACC-APP-RAWD
IC_ACC-APP-DIAG
IC_ACC-APP-ERR
IC_ACC-APP-OTH
IC_READ-LOG
IC_ACC-HISTORY
IC_ACC-READ
IC_ACC-WRITE
O__XCLASS-CREATE
O__XFUNC-CALL
IF_ASSIGN
IF_ASSIGN1
IF_ASSIGN_APP
IF_GRAFIC-OUT
IF_LINE-OUT
IF_RSTRING2012
IF_STRINGF-OUT20_APP
IF_RTEXTLIST2012-START
IF_SELECT-LANG
IC_DEFINE-IN1
IC_GLABEL1
O__APPLOG-CALL
O__SCREEN-CALL$

$OSDEP$
IC_CAN-TX
IC_CAN-RX
IC_CAN-RX-M
IC_CAN-RX-A
IC_NV-A1
IC_NV-B1
IC_NV-B2
IC_NV-C1
$

$OSDEP$
U__PARAM-CLOSE
